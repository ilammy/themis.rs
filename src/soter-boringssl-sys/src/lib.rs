// Copyright 2019 themis.rs maintainers
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

//! Raw FFI bindings to Soter's BoringSSL.

#![allow(missing_docs)]
#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(non_upper_case_globals)]
// Some symbols are only used with certain features enabled, so we need
// to suppress the unused warning when those features aren't enabled.
#![allow(unused)]

#[link(name = "soter_crypto_0_1_0")]
extern "C" {}

/* automatically generated by rust-bindgen */

pub type BIGNUM = u8;
pub type ENGINE = u8;
pub type EVP_MD_CTX = [u64; 4usize];
pub type EVP_MD = u8;
extern "C" {
    #[link_name = "__SOTER_BORINGSSL_0_1_0_EVP_sha256"]
    pub fn EVP_sha256() -> *const EVP_MD;
}
extern "C" {
    #[link_name = "__SOTER_BORINGSSL_0_1_0_EVP_sha512"]
    pub fn EVP_sha512() -> *const EVP_MD;
}
extern "C" {
    #[link_name = "__SOTER_BORINGSSL_0_1_0_EVP_DigestInit_ex"]
    pub fn EVP_DigestInit_ex(
        ctx: *mut EVP_MD_CTX,
        type_: *const EVP_MD,
        engine: *mut ENGINE,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "__SOTER_BORINGSSL_0_1_0_EVP_DigestUpdate"]
    pub fn EVP_DigestUpdate(
        ctx: *mut EVP_MD_CTX,
        data: *const ::std::os::raw::c_void,
        len: usize,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "__SOTER_BORINGSSL_0_1_0_EVP_DigestFinal_ex"]
    pub fn EVP_DigestFinal_ex(
        ctx: *mut EVP_MD_CTX,
        md_out: *mut u8,
        out_size: *mut ::std::os::raw::c_uint,
    ) -> ::std::os::raw::c_int;
}
extern "C" {
    #[link_name = "__SOTER_BORINGSSL_0_1_0_EVP_MD_CTX_size"]
    pub fn EVP_MD_CTX_size(ctx: *const EVP_MD_CTX) -> usize;
}
extern "C" {
    #[link_name = "__SOTER_BORINGSSL_0_1_0_EVP_MD_CTX_create"]
    pub fn EVP_MD_CTX_create() -> *mut EVP_MD_CTX;
}
extern "C" {
    #[link_name = "__SOTER_BORINGSSL_0_1_0_EVP_MD_CTX_destroy"]
    pub fn EVP_MD_CTX_destroy(ctx: *mut EVP_MD_CTX);
}
extern "C" {
    #[link_name = "__SOTER_BORINGSSL_0_1_0_RAND_bytes"]
    pub fn RAND_bytes(buf: *mut u8, len: usize) -> ::std::os::raw::c_int;
}
